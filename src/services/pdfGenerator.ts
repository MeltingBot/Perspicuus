/**
 * Service de g√©n√©ration de rapports PDF pour les √©valuations LCBFT
 */

import jsPDF from 'jspdf';
import { RiskAssessmentResult, RiskLevel, RiskAssessmentRequest } from '../types/lcbft';

export class PDFGenerator {
  private pdf: jsPDF;

  constructor() {
    this.pdf = new jsPDF();
    // Configuration de base avec support UTF-8
    this.pdf.setFont('helvetica');
  }

  /**
   * Nettoie le texte pour √©viter les probl√®mes d'encodage PDF
   */
  private cleanText(text: string): string {
    return text
      .replace(/'/g, "'")  // Apostrophes courbes
      .replace(/"/g, '"')  // Guillemets courbes ouvrants
      .replace(/"/g, '"')  // Guillemets courbes fermants
      .replace(/‚Äì/g, '-')  // Tirets longs
      .replace(/‚Äî/g, '-')  // Tirets cadratin
      .replace(/‚Ä¶/g, '...')  // Points de suspension
      .replace(/¬∞/g, 'deg')  // Degr√©
      .replace(/¬≤/g, '2')    // Exposant 2
      .replace(/¬≥/g, '3')    // Exposant 3
      .replace(/‚Ç¨/g, 'EUR')  // Euro
      // Supprimer les emojis probl√©matiques pour PDF
      .replace(/üåç|üó∫Ô∏è|üåé|üåè/g, '[GEO]')  // Emojis g√©ographiques
      .replace(/üíº|üè¢|üè™|üè≠/g, '[BIZ]')  // Emojis business
      .replace(/üë§|üë•|üßë|üë®|üë©/g, '[USER]')  // Emojis personne
      .replace(/üö®|‚ö†Ô∏è|‚ÑπÔ∏è|‚úÖ|‚ùå|‚≠ê/g, '')  // Emojis d'alerte/√©tat
      .replace(/üë®‚Äçüë©‚Äçüëß‚Äçüë¶/g, '[FAMILLE]')  // Emoji famille
      .replace(/ü§ù/g, '[PARTENARIAT]')  // Emoji partenariat
      // Normalisation finale des caract√®res fran√ßais
      .normalize('NFC');
  }

  /**
   * Ajoute du texte avec nettoyage automatique
   */
  private addCleanText(text: string, x: number, y: number, options?: any): void {
    this.pdf.text(this.cleanText(text), x, y, options);
  }

  /**
   * G√©n√®re un rapport PDF complet de l'√©valuation LCBFT
   */
  generateAssessmentReport(
    results: RiskAssessmentResult, 
    formData: RiskAssessmentRequest
  ): void {
    this.pdf = new jsPDF();
    this.addHeader();
    this.addSummary(results);
    this.addFormData(formData);
    this.addDetailedAnalysis(results);
    this.addRecommendations(results);
    this.addLegalDisclaimer();
    this.addFooter();
    
    // T√©l√©chargement automatique
    const fileName = `rapport_lcbft_${new Date().toISOString().slice(0, 10)}.pdf`;
    this.pdf.save(fileName);
  }

  private addHeader(): void {
    const pageWidth = this.pdf.internal.pageSize.width;
    
    // En-t√™te avec d√©grad√© visuel am√©lior√©
    this.pdf.setFillColor(30, 60, 114); // Couleur primaire
    this.pdf.rect(0, 0, pageWidth, 45, 'F');
    
    // Bande d√©corative
    this.pdf.setFillColor(63, 81, 181);
    this.pdf.rect(0, 35, pageWidth, 10, 'F');
    
    this.pdf.setTextColor(255, 255, 255);
    this.pdf.setFontSize(22);
    this.pdf.setFont('helvetica', 'bold');
    this.addCleanText('RAPPORT D\'√âVALUATION LCBFT', pageWidth / 2, 16, { align: 'center' });
    
    this.pdf.setFontSize(11);
    this.pdf.setFont('helvetica', 'normal');
    this.addCleanText('Perspicuus - Aide √† l\'√©valuation des risques de blanchiment de capitaux', pageWidth / 2, 26, { align: 'center' });
    
    this.pdf.setFontSize(9);
    const now = new Date();
    this.addCleanText(`G√©n√©r√© le ${now.toLocaleDateString('fr-FR')} √† ${now.toLocaleTimeString('fr-FR', {hour: '2-digit', minute: '2-digit'})}`, pageWidth / 2, 38, { align: 'center' });
    
    this.pdf.setTextColor(0, 0, 0);
  }

  private addSummary(results: RiskAssessmentResult): void {
    let yPos = 60;
    
    // Titre de section
    this.pdf.setFontSize(16);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(30, 60, 114);
    this.pdf.text('R√âSUM√â EX√âCUTIF', 20, yPos);
    this.pdf.setTextColor(0, 0, 0);
    
    // Ligne d√©corative sous le titre (apr√®s le texte)
    this.pdf.setDrawColor(30, 60, 114);
    this.pdf.setLineWidth(1.5);
    this.pdf.line(20, yPos + 3, 80, yPos + 3);
    
    yPos += 18;
    
    // Score et niveau de risque
    this.pdf.setFontSize(12);
    this.pdf.setFont('helvetica', 'normal');
    
    const riskColor = this.getRiskColor(results.niveau_risque);
    this.pdf.setFillColor(riskColor.r, riskColor.g, riskColor.b);
    this.pdf.rect(20, yPos - 5, 170, 25, 'F');
    
    this.pdf.setTextColor(255, 255, 255);
    this.pdf.setFontSize(14);
    this.pdf.setFont('helvetica', 'bold');
    this.addCleanText(`NIVEAU DE RISQUE: ${results.niveau_risque}`, 25, yPos + 5);
    this.addCleanText(`SCORE TOTAL: ${results.score_total} points`, 25, yPos + 15);
    
    this.pdf.setTextColor(0, 0, 0);
    this.pdf.setFont('helvetica', 'normal');
    yPos += 35;
    
    // R√©partition des scores
    this.pdf.setFontSize(12);
    this.addCleanText('R√©partition d√©taill√©e des scores:', 20, yPos);
    yPos += 10;
    
    this.addCleanText(`‚Ä¢ Risque g√©ographique: ${results.score_geo.score} points`, 25, yPos);
    yPos += 8;
    this.addCleanText(`‚Ä¢ Risque produit/service: ${results.score_produit.score} points`, 25, yPos);
    yPos += 8;
    this.addCleanText(`‚Ä¢ Risque client: ${results.score_client.score} points`, 25, yPos);
    yPos += 15;
  }

  private addFormData(formData: RiskAssessmentRequest): void {
    let yPos = 165;
    
    // Nouvelle page si n√©cessaire
    if (yPos > 250) {
      this.pdf.addPage();
      yPos = 20;
    }
    
    this.pdf.setFontSize(16);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(30, 60, 114);
    this.pdf.text('DONN√âES D\'√âVALUATION', 20, yPos);
    
    // Ligne d√©corative sous le titre
    this.pdf.setDrawColor(30, 60, 114);
    this.pdf.setLineWidth(1.5);
    this.pdf.line(20, yPos + 3, 90, yPos + 3);
    
    this.pdf.setTextColor(0, 0, 0);
    yPos += 18;
    
    this.pdf.setFontSize(12);
    this.pdf.setFont('helvetica', 'normal');
    
    // Informations client
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.text('Informations Client:', 20, yPos);
    yPos += 8;
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.text(`‚Ä¢ Type: ${formData.client.type_client}`, 25, yPos);
    yPos += 8;
    
    if (formData.client.code_naf) {
      this.pdf.text(`‚Ä¢ Code NAF/APE: ${formData.client.code_naf}`, 25, yPos);
      yPos += 8;
    }
    
    if (formData.client.date_creation) {
      this.pdf.text(`‚Ä¢ Date de cr√©ation: ${formData.client.date_creation.toLocaleDateString('fr-FR')}`, 25, yPos);
      yPos += 8;
    }
    
    if (formData.client.annee_naissance) {
      this.pdf.text(`‚Ä¢ Ann√©e de naissance: ${formData.client.annee_naissance}`, 25, yPos);
      yPos += 8;
    }
    
    this.pdf.text(`‚Ä¢ Relation √©tablie: ${formData.client.relation_etablie} ans`, 25, yPos);
    yPos += 8;
    
    // Drapeaux de risque client
    if (formData.client.pep || formData.client.sanctions || formData.client.notoriete_defavorable || formData.client.reticence_identification) {
      this.pdf.text('‚Ä¢ Indicateurs de risque:', 25, yPos);
      yPos += 6;
      if (formData.client.pep) { this.pdf.text('  - PEP (Personne Politiquement Expos√©e)', 30, yPos); yPos += 6; }
      if (formData.client.sanctions) { this.pdf.text('  - Sous sanctions internationales', 30, yPos); yPos += 6; }
      if (formData.client.notoriete_defavorable) { this.pdf.text('  - Notori√©t√© d√©favorable', 30, yPos); yPos += 6; }
      if (formData.client.reticence_identification) { this.pdf.text('  - R√©ticence √† l\'identification', 30, yPos); yPos += 6; }
      yPos += 2;
    }
    
    // Informations g√©ographiques
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.text('Informations G√©ographiques:', 20, yPos);
    yPos += 8;
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.text(`‚Ä¢ Pays de r√©sidence: ${formData.geographic.pays_residence}`, 25, yPos);
    yPos += 8;
    this.pdf.text(`‚Ä¢ Pays du compte: ${formData.geographic.pays_compte}`, 25, yPos);
    yPos += 8;
    this.pdf.text(`‚Ä¢ Distance √©tablissement: ${formData.geographic.distance_etablissement} km`, 25, yPos);
    yPos += 15;
    
    // Informations transaction
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.text('Transaction:', 20, yPos);
    yPos += 8;
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.text(`‚Ä¢ Montant: ${formData.transaction.montant.toLocaleString('fr-FR')} ‚Ç¨`, 25, yPos);
    yPos += 8;
    this.pdf.text(`‚Ä¢ Mode de paiement: ${formData.transaction.mode_paiement}`, 25, yPos);
    yPos += 8;
    if (formData.transaction.complexite_montage) {
      this.pdf.text('‚Ä¢ Montage juridique complexe', 25, yPos);
      yPos += 8;
    }
    if (formData.transaction.canal_distribution) {
      this.pdf.text(`‚Ä¢ Canal: ${formData.transaction.canal_distribution}`, 25, yPos);
      yPos += 8;
    }
  }

  private addDetailedAnalysis(results: RiskAssessmentResult): void {
    this.pdf.addPage();
    let yPos = 20;
    
    this.pdf.setFontSize(16);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(30, 60, 114);
    this.pdf.text('ANALYSE D√âTAILL√âE DES RISQUES', 20, yPos);
    
    // Ligne d√©corative sous le titre
    this.pdf.setDrawColor(30, 60, 114);
    this.pdf.setLineWidth(1.5);
    this.pdf.line(20, yPos + 3, 120, yPos + 3);
    
    this.pdf.setTextColor(0, 0, 0);
    yPos += 18;
    
    // Risques g√©ographiques
    this.pdf.setFontSize(14);
    this.pdf.setFont('helvetica', 'bold');
    this.addCleanText(`1. Risques G√©ographiques (${results.score_geo.score} points)`, 20, yPos);
    yPos += 10;
    
    this.pdf.setFontSize(11);
    this.pdf.setFont('helvetica', 'normal');
    if (results.score_geo.justifications.length > 0) {
      results.score_geo.justifications.forEach(justif => {
        const lines = this.pdf.splitTextToSize(`‚Ä¢ ${justif}`, 170);
        this.pdf.text(lines, 25, yPos);
        yPos += lines.length * 6;
      });
    } else {
      this.pdf.text('‚Ä¢ Aucun risque g√©ographique identifi√©', 25, yPos);
      yPos += 8;
    }
    yPos += 10;
    
    // Risques produit/service
    this.pdf.setFontSize(14);
    this.pdf.setFont('helvetica', 'bold');
    this.addCleanText(`2. Risques Produit/Service (${results.score_produit.score} points)`, 20, yPos);
    yPos += 10;
    
    this.pdf.setFontSize(11);
    this.pdf.setFont('helvetica', 'normal');
    if (results.score_produit.justifications.length > 0) {
      results.score_produit.justifications.forEach(justif => {
        const lines = this.pdf.splitTextToSize(`‚Ä¢ ${justif}`, 170);
        this.pdf.text(lines, 25, yPos);
        yPos += lines.length * 6;
      });
    } else {
      this.pdf.text('‚Ä¢ Aucun risque op√©rationnel majeur', 25, yPos);
      yPos += 8;
    }
    yPos += 10;
    
    // Risques client
    this.pdf.setFontSize(14);
    this.pdf.setFont('helvetica', 'bold');
    this.addCleanText(`3. Risques Client (${results.score_client.score} points)`, 20, yPos);
    yPos += 10;
    
    this.pdf.setFontSize(11);
    this.pdf.setFont('helvetica', 'normal');
    if (results.score_client.justifications.length > 0) {
      results.score_client.justifications.forEach(justif => {
        const lines = this.pdf.splitTextToSize(`‚Ä¢ ${justif}`, 170);
        this.pdf.text(lines, 25, yPos);
        yPos += lines.length * 6;
      });
    } else {
      this.pdf.text('‚Ä¢ Profil client standard', 25, yPos);
      yPos += 8;
    }
  }

  private addRecommendations(results: RiskAssessmentResult): void {
    this.pdf.addPage();
    let yPos = 20;
    
    this.pdf.setFontSize(16);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(30, 60, 114);
    this.pdf.text('RECOMMANDATIONS ET MESURES', 20, yPos);
    
    // Ligne d√©corative sous le titre
    this.pdf.setDrawColor(30, 60, 114);
    this.pdf.setLineWidth(1.5);
    this.pdf.line(20, yPos + 3, 110, yPos + 3);
    
    this.pdf.setTextColor(0, 0, 0);
    yPos += 18;
    
    // Encadr√© color√© selon le niveau de risque
    const riskColor = this.getRiskColor(results.niveau_risque);
    this.pdf.setFillColor(riskColor.r, riskColor.g, riskColor.b);
    this.pdf.rect(20, yPos - 5, 170, 15, 'F');
    
    this.pdf.setTextColor(255, 255, 255);
    this.pdf.setFontSize(14);
    this.pdf.setFont('helvetica', 'bold');
    const riskMessage = this.getRiskMessage(results.niveau_risque);
    this.addCleanText(riskMessage, 25, yPos + 5);
    
    this.pdf.setTextColor(0, 0, 0);
    yPos += 25;
    
    // Recommandations d√©taill√©es
    this.pdf.setFontSize(12);
    this.pdf.setFont('helvetica', 'normal');
    results.recommandations.forEach((rec, index) => {
      // Nettoyer le HTML
      const cleanRec = rec.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ');
      const lines = this.pdf.splitTextToSize(`${index + 1}. ${cleanRec}`, 170);
      
      // V√©rifier si on a besoin d'une nouvelle page
      if (yPos + lines.length * 6 > 280) {
        this.pdf.addPage();
        yPos = 20;
      }
      
      this.pdf.text(lines, 25, yPos);
      yPos += lines.length * 6 + 5;
    });
  }

  private addLegalDisclaimer(): void {
    this.pdf.addPage();
    let yPos = 20;
    const pageWidth = this.pdf.internal.pageSize.width;
    
    // Titre de la section
    this.pdf.setFontSize(16);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(30, 60, 114);
    this.pdf.text('MENTIONS L√âGALES ET LIMITATIONS', 20, yPos);
    
    // Ligne d√©corative sous le titre
    this.pdf.setDrawColor(30, 60, 114);
    this.pdf.setLineWidth(1.5);
    this.pdf.line(20, yPos + 3, 125, yPos + 3);
    
    this.pdf.setTextColor(0, 0, 0);
    yPos += 22;
    
    // Encadr√© d'avertissement
    this.pdf.setFillColor(255, 243, 224); // Couleur orange claire
    this.pdf.setDrawColor(255, 193, 7); // Bordure orange
    this.pdf.rect(15, yPos - 10, pageWidth - 30, 60, 'FD');
    
    this.pdf.setFontSize(12);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setTextColor(230, 81, 0); // Orange fonc√©
    this.pdf.text('AVERTISSEMENT IMPORTANT', 20, yPos);
    yPos += 15;
    
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.setTextColor(0, 0, 0);
    this.pdf.setFontSize(10);
    
    const disclaimerText = [
      "Cette analyse de risque LCBFT constitue un outil d'aide √† la d√©cision et ne",
      "saurait se substituer au jugement professionnel de l'√©tablissement financier.",
      "Les r√©sultats pr√©sent√©s ne constituent pas un engagement de conformit√©",
      "r√©glementaire ni une garantie d'absence de risque de blanchiment."
    ];
    
    disclaimerText.forEach(line => {
      this.pdf.text(line, 20, yPos);
      yPos += 6;
    });
    
    yPos += 15;
    
    // Section des limites d'utilisation
    this.pdf.setFontSize(11);
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.text('LIMITES D\'UTILISATION :', 20, yPos);
    yPos += 10;
    
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.setFontSize(10);
    
    const limitations = [
      "‚Ä¢ L'√©valuation est bas√©e exclusivement sur les donn√©es fournies lors de l'analyse",
      "‚Ä¢ Les informations doivent √™tre r√©guli√®rement mises √† jour selon l'√©volution du profil client",
      "‚Ä¢ Cette analyse ne dispense pas des obligations de vigilance et de d√©claration TRACFIN",
      "‚Ä¢ L'√©tablissement reste responsable de ses d√©cisions d'acceptation ou de refus de client√®le",
      "‚Ä¢ Les seuils et crit√®res appliqu√©s peuvent n√©cessiter des ajustements selon le contexte"
    ];
    
    limitations.forEach(limitation => {
      const lines = this.pdf.splitTextToSize(limitation, 170);
      this.pdf.text(lines, 20, yPos);
      yPos += lines.length * 6 + 2;
    });
    
    yPos += 10;
    
    // Section responsabilit√© professionnelle
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.text('RESPONSABILIT√â PROFESSIONNELLE :', 20, yPos);
    yPos += 10;
    
    this.pdf.setFont('helvetica', 'normal');
    const responsabilityText = [
      "L'utilisateur demeure seul responsable de l'interpr√©tation des r√©sultats et des",
      "d√©cisions prises en cons√©quence. En cas de doute sur l'√©valuation d'un dossier,",
      "il convient de solliciter l'avis du responsable conformit√© ou du correspondant",
      "TRACFIN de l'√©tablissement."
    ];
    
    responsabilityText.forEach(line => {
      this.pdf.text(line, 20, yPos);
      yPos += 6;
    });
    
    yPos += 15;
    
    // Conformit√© r√©glementaire
    this.pdf.setFillColor(240, 248, 255); // Bleu tr√®s clair
    this.pdf.setDrawColor(33, 150, 243); // Bordure bleue
    this.pdf.rect(15, yPos - 5, pageWidth - 30, 25, 'FD');
    
    this.pdf.setFont('helvetica', 'bold');
    this.pdf.setFontSize(10);
    this.pdf.text('R√âF√âRENCES R√âGLEMENTAIRES', 20, yPos + 5);
    yPos += 12;
    
    this.pdf.setFont('helvetica', 'normal');
    this.pdf.text('Bas√© sur les recommandations FATF/GAFI, directives europ√©ennes et Code mon√©taire', 20, yPos);
    yPos += 6;
    this.pdf.text('et financier fran√ßais - Articles L561-1 et suivants', 20, yPos);
  }

  private addFooter(): void {
    const pageCount = this.pdf.internal.pages.length - 1;
    
    for (let i = 1; i <= pageCount; i++) {
      this.pdf.setPage(i);
      const pageWidth = this.pdf.internal.pageSize.width;
      const pageHeight = this.pdf.internal.pageSize.height;
      
      // Ligne de s√©paration plus fine
      this.pdf.setDrawColor(220, 220, 220);
      this.pdf.setLineWidth(0.5);
      this.pdf.line(20, pageHeight - 25, pageWidth - 20, pageHeight - 25);
      
      // Informations de pied de page avec meilleure mise en page
      this.pdf.setFontSize(8);
      this.pdf.setTextColor(120, 120, 120);
      this.pdf.text('Perspicuus LCBFT - Document confidentiel', 20, pageHeight - 15);
      this.pdf.text(`Page ${i}/${pageCount}`, pageWidth - 20, pageHeight - 15, { align: 'right' });
      this.pdf.text(`G√©n√©r√© le ${new Date().toLocaleDateString('fr-FR')} - Version 1.0`, pageWidth / 2, pageHeight - 15, { align: 'center' });
      
      // Mention l√©gale en bas de page
      this.pdf.setFontSize(7);
      this.pdf.setTextColor(100, 100, 100);
      this.pdf.text('Outil d\'aide √† la d√©cision - Ne constitue pas une validation de conformit√© r√©glementaire', pageWidth / 2, pageHeight - 8, { align: 'center' });
    }
  }

  private getRiskColor(level: RiskLevel): { r: number, g: number, b: number } {
    switch (level) {
      case RiskLevel.FAIBLE: return { r: 76, g: 175, b: 80 };
      case RiskLevel.MODERE: return { r: 255, g: 152, b: 0 };
      case RiskLevel.ELEVE: return { r: 244, g: 67, b: 54 };
      case RiskLevel.TRES_ELEVE: return { r: 211, g: 47, b: 47 };
      default: return { r: 117, g: 117, b: 117 };
    }
  }

  private getRiskMessage(level: RiskLevel): string {
    switch (level) {
      case RiskLevel.TRES_ELEVE: return 'RISQUE TR√àS √âLEV√â - Vigilance renforc√©e obligatoire';
      case RiskLevel.ELEVE: return 'RISQUE √âLEV√â - Mesures de vigilance renforc√©es';
      case RiskLevel.MODERE: return 'RISQUE MOD√âR√â - Vigilance standard';
      case RiskLevel.FAIBLE: return 'RISQUE FAIBLE - Vigilance all√©g√©e possible';
      default: return 'NIVEAU DE RISQUE IND√âTERMIN√â';
    }
  }
}